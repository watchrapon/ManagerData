import { useEffect, useState } from 'react';
import '../styles/Modal.css';

function ActionModal({ user, onEdit, onDelete, onClose, apiUrl }) {
  const [userData, setUserData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  
  useEffect(() => {
    const fetchUserDetails = async () => {
      try {
        console.log(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID: ${user._id}`);
        const response = await fetch(`${apiUrl}/${user._id}`);
        
        if (!response.ok) {
          const errorText = await response.text();
          console.error('API ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', errorText);
          throw new Error(`‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${response.statusText}`);
        }
        
        const data = await response.json();
        console.log('‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
        setUserData(data);
      } catch (err) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', err);
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    
    if (user && user._id) {
      fetchUserDetails();
    } else {
      setError("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      setLoading(false);
    }
  }, [user, apiUrl]);

  return (
    <div className="modal-overlay">
      <div className="modal-content user-action-modal">
        <div className="modal-header">
          <h2>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
          <button className="close-btn" onClick={onClose}>√ó</button>
        </div>
        
        <div className="modal-body">
          {loading && <div className="loading-indicator">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...</div>}
          {error && <div className="error">{error}</div>}
          
          {userData && (
            <div className="user-data-container">
              <div className="user-details">
                <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h3>
                
                <div className="user-detail-item">
                  <span className="detail-label">‡∏ä‡∏∑‡πà‡∏≠:</span>
                  <span className="detail-value">{userData.name}</span>
                </div>
                
                <div className="user-detail-item">
                  <span className="detail-label">‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</span>
                  <span className="detail-value">{userData.email}</span>
                </div>
                
                <div className="user-detail-item">
                  <span className="detail-label">‡πÄ‡∏û‡∏®:</span>
                  <span className="detail-value muted-text">{userData.sex || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</span>
                </div>
                
                <div className="user-detail-item">
                  <span className="detail-label">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</span>
                  <span className="detail-value">{userData.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</span>
                </div>
                
                <div className="user-detail-item">
                  <span className="detail-label">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</span>
                  <span className="detail-value address">{userData.address || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</span>
                </div>
                
                {userData.created_at && (
                  <div className="user-detail-item">
                    <span className="detail-label">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠:</span>
                    <span className="detail-value">{new Date(userData.created_at).toLocaleString('th-TH')}</span>
                  </div>
                )}
                
                {userData.updated_at && (
                  <div className="user-detail-item">
                    <span className="detail-label">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</span>
                    <span className="detail-value">{new Date(userData.updated_at).toLocaleString('th-TH')}</span>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
        
        <div className="modal-footer action-buttons">
          <button className="edit-btn" onClick={onEdit} disabled={loading}>
            <span className="action-icon">‚úèÔ∏è</span> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>
          <button className="delete-btn" onClick={onDelete} disabled={loading}>
            <span className="action-icon">üóëÔ∏è</span> ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </button>
          <button className="close-action-btn" onClick={onClose}>‡∏õ‡∏¥‡∏î</button>
        </div>
      </div>
    </div>
  );
}

export default ActionModal;
